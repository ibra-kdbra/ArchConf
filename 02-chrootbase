#!/bin/bash
# script 02
# run in chroot
# usage: ./02-chrootbase [-qi]
# -q quiet mode (dont ask to confirm installation and packages installation)
# -i change defaults interactively

. common.sh
. defaults.sh
. "${TYS_CONFIG}"

update_keys() {
  echo -e "${TYS_Y}(TYS) Update keys${TYS_NC}"
  pacman-key --init
  pacman-key --populate archlinux
}

set_timezone() {
  echo -e "${TYS_Y}(TYS) Set timezone to ${TYS_DEFAULT_TIMEZONE}${TYS_NC}"
  ln -sf /usr/share/zoneinfo/"${TYS_DEFAULT_TIMEZONE}" /etc/localtime
}

set_sysclock() {
  echo -e "${TYS_Y}(TYS) Update the system clock${TYS_NC}"
  hwclock --systohc
}

set_locale() {
  echo -e "${TYS_Y}(TYS) Set locale to ${TYS_DEFAULT_LANG}${TYS_NC}"
  echo "${TYS_DEFAULT_LANG}.UTF-8 UTF-8" >>/etc/locale.gen
  locale-gen
  echo "LANG=${TYS_DEFAULT_LANG}.UTF-8" >/etc/locale.conf
}

set_keymap() {
  echo -e "${TYS_Y}(TYS) Set keymap to ${TYS_DEFAULT_KEYMAP}${TYS_NC}"
  echo KEYMAP="${TYS_DEFAULT_KEYMAP}" >/etc/vconsole.conf
}

set_hostname() {
  echo -e "${TYS_Y}(TYS) Set hostname to ${TYS_DEFAULT_HOSTNAME}${TYS_NC}"
  echo "${TYS_DEFAULT_HOSTNAME}" >/etc/hostname
  echo -e "${TYS_Y}(TYS) Configure hosts file${TYS_NC}"
  cat <<EOF >>/etc/hosts
127.0.0.1    localhost
::1          localhost
127.0.1.1    ${TYS_DEFAULT_HOSTNAME}
EOF
}

set_network() {
  echo -e "${TYS_Y}(TYS) Enable network manager${TYS_NC}"
  systemctl enable NetworkManager
  systemctl enable NetworkManager-wait-online
}

set_initramfs() {
  [[ -b ${TYS_DEFAULT_LUKSROOT} ]] && sed --in-place=bak '/^HOOKS=/ s/filesystems/encrypt &/g' /etc/mkinitcpio.conf
  echo -e "${TYS_Y}(TYS) Initramfs${TYS_NC}"
  mkinitcpio -p linux-lts
  mkinitcpio -p linux
}

set_user() {
  echo -e "${TYS_Y}(TYS) Create user ${TYS_DEFAULT_LOGIN} and add to sudoers${TYS_NC}"
  useradd -m -G wheel -s /bin/bash "${TYS_DEFAULT_LOGIN}"
  echo "${TYS_DEFAULT_LOGIN} ALL=(ALL) ALL" >/etc/sudoers.d/00_"${TYS_DEFAULT_LOGIN}"
}

# $1 login
# $2 password from defaults.sh if defined
set_passwd() {
  local login="${1}" password="${2}"
  echo -e "${TYS_Y}(TYS) Set ${login} password${TYS_NC}"
  if [[ -n ${password} ]]; then
    echo -e "${password}\n${password}" | passwd "${login}" -q &>/dev/null
  else
    until passwd "${login}"; do
      echo "Try again"
      sleep 2
    done
  fi
}

set_zram() {
  echo -e "${TYS_Y}(TYS) Create zram config${TYS_NC}"
  echo "[zram0]" >/etc/systemd/zram-generator.conf
}

# $1 kernel (linux | linux-lts)
# $2 ucode (intel | amd)
# $3 options (with or without luks)
new_entry() {
  local kernel="${1}" ucode="${2}" options="${3}"
  cat <<EOF >/boot/loader/entries/"${1}".conf
# Created by: (TYS) scripts
# Created on: $(date)
title Arch Linux (${kernel})
linux /vmlinuz-${kernel}
initrd /${ucode}.img
initrd /initramfs-${kernel}.img
${options}
EOF
}

get_interactive_settings() {
  local tmpval

  read -r -p "${TYS_Y}"'(TYS) Enter super user login (default: '"${TYS_DEFAULT_LOGIN}"'): '"${TYS_NC}" tmpval
  TYS_DEFAULT_LOGIN=${tmpval:=${TYS_DEFAULT_LOGIN}}
  validate_login "${TYS_DEFAULT_LOGIN}"

  unset tmpval
  read -r -p "${TYS_Y}"'(TYS) Enter Time Zone (default: '"${TYS_DEFAULT_TIMEZONE}"'): '"${TYS_NC}" tmpval
  TYS_DEFAULT_TIMEZONE=${tmpval:=${TYS_DEFAULT_TIMEZONE}}
  validate_timezone "${TYS_DEFAULT_TIMEZONE}"

  unset tmpval
  read -r -p "${TYS_Y}"'(TYS) Enter utf-8 locale (default: '"${TYS_DEFAULT_LANG}"'): '"${TYS_NC}" tmpval
  TYS_DEFAULT_LANG=${tmpval:=${TYS_DEFAULT_LANG}}
  validate_locale "${TYS_DEFAULT_LANG}"

  unset tmpval
  read -r -p "${TYS_Y}"'(TYS) Enter keyboard map (default: '"${TYS_DEFAULT_KEYMAP}"'): '"${TYS_NC}" tmpval
  TYS_DEFAULT_KEYMAP=${tmpval:=${TYS_DEFAULT_KEYMAP}}
  validate_keymap "${TYS_DEFAULT_KEYMAP}"

  unset tmpval
  read -r -p "${TYS_Y}"'(TYS) Enter hostname (default: '"${TYS_DEFAULT_HOSTNAME}"'): '"${TYS_NC}" tmpval
  TYS_DEFAULT_HOSTNAME=${tmpval:=${TYS_DEFAULT_HOSTNAME}}
  validate_hostname "${TYS_DEFAULT_HOSTNAME}"
}

show_settings() {
  echo -e "\n${TYS_R}Verify settings:${TYS_NC}\n"
  echo -e "${TYS_Y}NB:${TYS_NC} Edit default.sh to change settings or run in interactive mode with -i flag\n"
  echo -e "${TYS_Y}Timezone:${TYS_NC} ${TYS_DEFAULT_TIMEZONE}"
  echo -e "${TYS_Y}Langage:${TYS_NC} ${TYS_DEFAULT_LANG}"
  echo -e "${TYS_Y}Keymap:${TYS_NC} ${TYS_DEFAULT_KEYMAP}"
  echo -e "${TYS_Y}Hostname:${TYS_NC} ${TYS_DEFAULT_HOSTNAME}"
  echo -e "${TYS_Y}Kernel:${TYS_NC} ${TYS_DEFAULT_KERNEL}"
  echo -e "${TYS_Y}Login:${TYS_NC} ${TYS_DEFAULT_LOGIN}\n"
}

set_sysdboot() {
  local sysdbootoptions

  echo -e "${TYS_Y}(TYS) Install Systemd-boot${TYS_NC}"
  bootctl install

  if [[ -b ${TYS_DEFAULT_LUKSROOT} ]]; then
    local lr luksuuid
    lr=$(basename "${TYS_DEFAULT_LUKSROOT}")
    luksuuid=$(blkid -s UUID -o value "${TYS_CONFIG_ROOTDEVPART}")
    sysdbootoptions="options cryptdevice=UUID=${luksuuid}:${lr} root=${TYS_DEFAULT_LUKSROOT} zswap.enabled=0 rw rootfstype=ext4 consoleblank=600"
  else
    sysdbootoptions="options root=PARTUUID=$(blkid -s PARTUUID -o value "${TYS_CONFIG_ROOTDEVPART}") zswap.enabled=0 rw rootfstype=ext4 consoleblank=600"
  fi

  new_entry linux "${TYS_CONFIG_UCODE}" "${sysdbootoptions}"
  new_entry linux-lts "${TYS_CONFIG_UCODE}" "${sysdbootoptions}"

  {
    echo "timeout 3"
    echo "default ${TYS_DEFAULT_KERNEL}.conf"
  } >>/boot/loader/loader.conf

  echo -e "${TYS_Y}(TYS) Enable systemd-boot update${TYS_NC}"
  systemctl enable systemd-boot-update

  echo -e "${TYS_Y}(TYS) Comment boot mount in fstab${TYS_NC}"
  sed -i '/[/]boot/ s/^/#/' /etc/fstab
}

set_grub() {

  echo -e "${TYS_Y}(TYS) Install Grub${TYS_NC}"
  if [[ "${TYS_CONFIG_BOOTMODE}" != "BIOS" ]]; then
    grub-install --target=x86_64-efi --efi-directory="${TYS_CONFIG_EFI}" --bootloader-id=GRUB
  else
    grub-install --target=i386-pc "${TYS_CONFIG_DEVICE}"
  fi

  echo -e "${TYS_Y}(TYS) Disable zswap in kernel params${TYS_NC}"
  sed -i '/^GRUB_CMDLINE_LINUX_DEFAULT/ {/zswap.enabled=0/! s/\(.*\)"/\1 zswap.enabled=0"/}' /etc/default/grub

  if [[ -b ${TYS_DEFAULT_LUKSROOT} ]]; then
    local lr luksuuid
    lr=$(basename "${TYS_DEFAULT_LUKSROOT}")
    luksuuid=$(blkid -s UUID -o value "${TYS_CONFIG_ROOTDEVPART}")
    sed -i "s/GRUB_CMDLINE_LINUX=\"\"/GRUB_CMDLINE_LINUX=\"cryptdevice=UUID=${luksuuid}:${lr}\"/g" /etc/default/grub
  fi

  echo -e "${TYS_Y}(TYS) Set grub boot default to last saved${TYS_NC}"
  sed -i 's/GRUB_DEFAULT=0/GRUB_DEFAULT=saved/' /etc/default/grub
  sed -i 's/#GRUB_SAVEDEFAULT=true/GRUB_SAVEDEFAULT=true/' /etc/default/grub

  echo -e "${TYS_Y}(TYS) Create grub config${TYS_NC}"
  grub-mkconfig -o /boot/grub/grub.cfg
}

# $1 quiet
install_packages() {
  local pkgnbr proceed=Y quiet="${1}"
  pkgnbr=$(wc -l <packages.txt)
  [[ $pkgnbr -gt 0 ]] && {
    [[ "${quiet}" == false ]] &&
      proceed=$(confirm "(TYS) Install ${pkgnbr} packages from packages.txt?" Y n)
    [[ "${proceed}" == "y" ]] && {
      echo -e "${TYS_Y}(TYS) Installing ${pkgnbr} supplemental packages${TYS_NC}"
      pacman --needed --noconfirm -S - <packages.txt
    }
  }
}

main() {
  local quiet=false interactive=false flags proceed

  while getopts 'qi' flags; do
    case $flags in
      q)
        quiet=true
        ;;
      i)
        interactive=true
        ;;
      *)
        exit 1
        ;;
    esac
  done

  [[ "${interactive}" == true ]] && get_interactive_settings

  [[ "${quiet}" == false ]] && {
    show_settings
    proceed=$(confirm "(TYS) Install?" Y n)
    [[ "${proceed}" != "y" ]] && exit
  }

  update_keys

  set_timezone
  set_sysclock
  set_locale
  set_keymap
  set_hostname
  set_network
  set_initramfs
  set_passwd root "${TYS_DEFAULT_ROOTPWD}"
  set_user
  set_passwd "${TYS_DEFAULT_LOGIN}" "${TYS_DEFAULT_USERPWD}"
  set_zram

  case "${TYS_CONFIG_BOOTLOADER}" in
    G)
      set_grub
      ;;
    S)
      set_sysdboot
      ;;
    *)
      echo "${TYS_R}Invalid bootloader option: ${TYS_CONFIG_BOOTLOADER}${TYS_NC}"
      exit
      ;;
  esac

  # Remove passwords from defaults.sh file
  echo -e "${TYS_Y}(TYS) Remove passwords from defaults.sh${TYS_NC}"
  sed -i \
    -e 's/TYS_DEFAULT_ROOTPWD=.*/TYS_DEFAULT_ROOTPWD=/' \
    -e 's/TYS_DEFAULT_USERPWD=.*/TYS_DEFAULT_USERPWD=/' \
    -e 's/lukspwd=.*/lukspwd=/' defaults.sh

  install_packages "${quiet}"
}

main "${@}"
